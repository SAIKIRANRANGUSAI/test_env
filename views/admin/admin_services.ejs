<%- include('../layouts/admin_layouts_header', { title: 'Admin | Services', currentPage: 'services' }) %>

<%- include('../layouts/admin_layouts_sidebar', { currentPage: 'services' }) %>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

<div class="main-content container-fluid py-4">
  <!-- Services Page Content -->
  <div class="card shadow-lg border-0 mb-4 overflow-hidden">
    <div class="card-header bg-gradient-primary text-white p-4 position-relative">
      <h5 class="mb-0 fw-bold d-flex align-items-center">
        <i class="fas fa-file-alt me-2"></i>
        Services Page Content
      </h5>
    </div>
    <div class="card-body p-4">
      <form id="contentForm">
        <div class="row">
          <div class="col-12 mb-4">
            <label class="form-label fw-bold fs-6 mb-2">
              <i class="fas fa-heading text-primary me-1"></i>
              Heading
            </label>
            <div id="headingEditor" class="ckeditor-container border rounded p-2 bg-light"></div>
            <input type="hidden" id="heading" name="heading" value="<%- content.heading || '' %>">
            <small class="text-muted d-block">Use up to 65 characters for heading to keep design consistent.</small>
          </div>
          <div class="col-12 mb-4">
            <label class="form-label fw-bold fs-6 mb-2">
              <i class="fas fa-align-left text-primary me-1"></i>
              Description
            </label>
            <div id="descriptionEditor" class="ckeditor-container border rounded p-2 bg-light"></div>
            <input type="hidden" id="description" name="description" value="<%- content.description || '' %>">
            <small class="text-muted d-block">Use up to 200 characters for description to maintain layout.</small>
          </div>
        </div>
        <div class="d-flex justify-content-end">
          <button type="submit" class="btn btn-success btn-lg px-5 py-2 fw-bold">
            <i class="fas fa-save me-2"></i>
            Update Content
          </button>
        </div>
      </form>
    </div>
  </div>

  <!-- Services Management -->
  <div class="card shadow-lg border-0 mt-4" id="serviceManagementCard">
    <div class="card-header bg-gradient-success text-white p-4 position-relative">
      <h5 class="mb-0 fw-bold" id="serviceFormTitle">Add New Service</h5>
    </div>
    <div class="card-body p-4">
      <form id="serviceForm" enctype="multipart/form-data">
        <input type="hidden" id="serviceId">

        <!-- Heading & Text Fields -->
        <div class="row">
          <div class="col-md-6 mb-4">
            <label class="form-label fw-bold fs-6 mb-2">
              <i class="fas fa-heading text-success me-1"></i>
              Heading *
            </label>
            <div id="serviceHeadingEditor" class="ckeditor-container border rounded p-2 bg-light"></div>
            <input type="hidden" id="serviceHeading" name="heading" required>
            <small class="text-muted d-block">
  Use up to 15 characters for heading (current: 13).
</small>
          </div>
          <div class="col-md-6 mb-4">
            <label class="form-label fw-bold fs-6 mb-2">
              <i class="fas fa-subscript text-success me-1"></i>
              Sub Heading
            </label>
            <div id="serviceSubHeadingEditor" class="ckeditor-container border rounded p-2 bg-light"></div>
            <input type="hidden" id="serviceSubHeading" name="sub_heading">
            <small class="text-muted d-block">
  Use up to 25 characters for heading (current: 24).
</small>
          </div>
          <div class="col-12 mb-4">
            <label class="form-label fw-bold fs-6 mb-2">
              <i class="fas fa-paragraph text-success me-1"></i>
              Short Description
            </label>
            <div id="serviceShortDescEditor" class="ckeditor-container border rounded p-2 bg-light"></div>
            <input type="hidden" id="serviceShortDesc" name="short_description">
            <small class="text-muted d-block">
  Use up to 130 characters for description (current: 123).
</small>
          </div>
          <div class="col-12 mb-4">
            <label class="form-label fw-bold fs-6 mb-2">
              <i class="fas fa-align-justify text-success me-1"></i>
              Description
            </label>
            <div id="serviceDescEditor" class="ckeditor-container border <small class="text-muted d-block">
  Use up to 25 characters for heading (current: 24).
</small>rounded p-2 bg-light"></div>
            <input type="hidden" id="serviceDesc" name="description">

          </div>
        </div>

        <!-- Image Uploads -->
        <div class="row">
          <div class="col-md-4 mb-4">
            <label class="form-label fw-bold fs-6 mb-2">
              <i class="fas fa-image text-info me-1"></i>
              Icon Image *
            </label>
            <input type="file" id="iconImage" name="icon_image" class="form-control" accept="image/*">
            <div id="iconPreview" class="mt-2 border rounded p-3 bg-light d-flex justify-content-center"></div>
            <input type="hidden" id="currentIconImage">
            <small class="text-muted d-block mt-1">Required for new services, Aspect ratio value: 707âˆ¶830 (7 characters)</small>
            
          </div>
          <div class="col-md-4 mb-4">
            <label class="form-label fw-bold fs-6 mb-2">
              <i class="fas fa-image text-info me-1"></i>
              Image 1
            </label>
            <input type="file" id="image1" name="image_1" class="form-control" accept="image/*">
            
            <div id="image1Preview" class="mt-2 border rounded p-3 bg-light d-flex justify-content-center"></div>
            <small class="text-muted d-block">
  Use up to 450 characters for description (current: 449).
</small>
            <input type="hidden" id="currentImage1">
          </div>
          <div class="col-md-4 mb-4">
            <label class="form-label fw-bold fs-6 mb-2">
              <i class="fas fa-image text-info me-1"></i>
              Image 2
            </label>
            <input type="file" id="image2" name="image_2" class="form-control" accept="image/*">
            
            <div id="image2Preview" class="mt-2 border rounded p-3 bg-light d-flex justify-content-center"></div>
            <small class="text-muted d-block">
  Use up to 450 characters for description (current: 449).
</small>
            <input type="hidden" id="currentImage2">
          </div>
        </div>

        <hr class="my-4">

        <!-- FAQs -->
        <div class="mb-4">
          <h6 class="fw-bold mb-3 d-flex align-items-center">
            <i class="fas fa-question-circle text-warning me-2"></i>
            FAQs
            <button type="button" class="btn btn-sm btn-primary ms-auto" id="addFaqBtn" title="Add new FAQ">
              <i class="fas fa-plus"></i> Add FAQ
            </button>
          </h6>
          <div id="faqContainer" class="faq-section"></div>
        </div>

        <div class="d-flex gap-2 justify-content-end">
          <button type="button" class="btn btn-outline-secondary px-4 py-2" onclick="resetServiceForm()">
            <i class="fas fa-undo me-2"></i>
            Reset Form
          </button>
          <button type="submit" class="btn btn-success px-5 py-2 fw-bold" id="saveServiceBtn">
            <i class="fas fa-save me-2"></i>
            Save Service
          </button>
        </div>
      </form>
    </div>
  </div>

  <!-- Services List -->
  <div class="card shadow-lg border-0 mt-4">
    <div class="card-header bg-gradient-info text-white p-4 position-relative">
      <h5 class="mb-0 fw-bold d-flex align-items-center">
        <i class="fas fa-list-ul me-2"></i>
        All Services
      </h5>
    </div>
    <div class="card-body p-4">
      <div class="table-responsive">
        <table class="table table-hover align-middle rounded overflow-hidden" id="servicesTable">
          <thead class="table-light sticky-top">
            <tr>
              <th scope="col" class="fw-bold py-3">
                <i class="fas fa-image me-1"></i>
                Icon
              </th>
              <th scope="col" class="fw-bold py-3">
                <i class="fas fa-heading me-1"></i>
                Heading
              </th>
              <th scope="col" class="fw-bold py-3">
                <i class="fas fa-subscript me-1"></i>
                Sub Heading
              </th>
              <th scope="col" class="fw-bold py-3">
                <i class="fas fa-paragraph me-1"></i>
                Short Description
              </th>
              <th scope="col" class="fw-bold py-3 text-center">
                <i class="fas fa-cogs me-1"></i>
                Actions
              </th>
            </tr>
          </thead>
          <tbody class="table-group-divider">
            <% if (services && services.length) { %>
              <% services.forEach(service => { %>
                <tr data-id="<%= service.id %>" class="table-row-hover">
                  <td class="text-center py-3">
                    <% if (service.icon_image) { %>
                      <img src="<%= service.icon_image %>" alt="Icon" class="rounded-circle shadow-sm" style="width: 50px; height: 50px; object-fit: cover;" data-bs-toggle="tooltip" title="Icon Preview">
                    <% } else { %>
                      <span class="badge bg-secondary fs-6">No Icon</span>
                    <% } %>
                  </td>
                  <td class="fw-semibold"><%= service.heading.replace(/<[^>]+>/g, '') %></td>
                  <td><%- service.sub_heading ? service.sub_heading.replace(/<[^>]+>/g, '') : '<span class="text-muted">-</span>' %></td>
                  <td class="text-truncate" style="max-width: 200px;" title="<%= service.short_description ? service.short_description.replace(/<[^>]+>/g, '') : '-' %>">
                    <%- service.short_description ? service.short_description.replace(/<[^>]+>/g, '').substring(0,50) + '...' : '<span class="text-muted">-</span>' %>
                  </td>
                  <td class="text-center">
                    <div class="btn-group btn-group-sm" role="group">
                      <button class="btn btn-warning" onclick="editService(<%= service.id %>)" title="Edit Service">
                        <i class="fas fa-edit"></i>
                      </button>
                      <button class="btn btn-danger" onclick="deleteService(<%= service.id %>)" title="Delete Service">
                        <i class="fas fa-trash-alt"></i>
                      </button>
                    </div>
                  </td>
                </tr>
              <% }) %>
            <% } else { %>
              <tr>
                <td colspan="5" class="text-center py-5 text-muted">
                  <i class="fas fa-inbox fa-3x mb-3 opacity-50"></i>
                  <p class="mb-0">No Services Found</p>
                </td>
              </tr>
            <% } %>
          </tbody>
        </table>
      </div>
    </div>
  </div>
</div>

<script src="https://cdn.ckeditor.com/ckeditor5/41.4.2/classic/ckeditor.js"></script>
<script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
document.addEventListener('DOMContentLoaded', async () => {
  const servicesData = <%- JSON.stringify(services || []) %>;
  let serviceEditors = {}, contentEditors = {}, faqEditors = [];

  // ---------- Strip HTML helper ----------
  function stripHtml(html){
    const div = document.createElement("div");
    div.innerHTML = html;
    return div.textContent || div.innerText || "";
  }

  // ---------- CKEditor Initialization ----------
  async function initEditor(selector, setDataCallback){
    const editor = await ClassicEditor.create(document.querySelector(selector));
    editor.model.document.on('change:data', () => setDataCallback(editor.getData()));
    return editor;
  }

  // Service editors
  serviceEditors.heading = await initEditor('#serviceHeadingEditor', data => document.getElementById('serviceHeading').value = stripHtml(data));
  serviceEditors.sub_heading = await initEditor('#serviceSubHeadingEditor', data => document.getElementById('serviceSubHeading').value = stripHtml(data));
  serviceEditors.short_description = await initEditor('#serviceShortDescEditor', data => document.getElementById('serviceShortDesc').value = stripHtml(data));
  serviceEditors.description = await initEditor('#serviceDescEditor', data => document.getElementById('serviceDesc').value = stripHtml(data));

  // Content editors
  contentEditors.heading = await initEditor('#headingEditor', data => document.getElementById('heading').value = stripHtml(data));
  contentEditors.description = await initEditor('#descriptionEditor', data => document.getElementById('description').value = stripHtml(data));

  contentEditors.heading.setData('<%= content.heading || "" %>');
  contentEditors.description.setData('<%= content.description || "" %>');

  // ---------- FAQ Management ----------
  function addFaq(question = '', answer = ''){
    const idx = faqEditors.length;
    const container = document.getElementById('faqContainer');
    const div = document.createElement('div');
    div.classList.add('mb-3','border','border-secondary-subtle','rounded','p-3','position-relative','bg-light');
    div.innerHTML = `
      <button type="button" class="btn-close position-absolute top-0 end-0 m-2" aria-label="Remove FAQ"></button>
      <label class="form-label fw-semibold">Question</label>
      <div id="faqQuestionEditor${idx}" class="ckeditor-container border rounded p-2 bg-white"></div>
      <input type="hidden" id="faqQuestion${idx}" name="faq_question_${idx}">
      <label class="form-label fw-semibold mt-3">Answer</label>
      <div id="faqAnswerEditor${idx}" class="ckeditor-container border rounded p-2 bg-white"></div>
      <input type="hidden" id="faqAnswer${idx}" name="faq_answer_${idx}">
    `;
    container.appendChild(div);

    div.querySelector('.btn-close').addEventListener('click', ()=> { div.remove(); faqEditors[idx]=null; });

    ClassicEditor.create(div.querySelector(`#faqQuestionEditor${idx}`))
      .then(editor => {
        faqEditors[idx] = faqEditors[idx] || {};
        faqEditors[idx].question = editor;
        editor.setData(question);
        editor.model.document.on('change:data', ()=> document.getElementById(`faqQuestion${idx}`).value = stripHtml(editor.getData()));
      });

    ClassicEditor.create(div.querySelector(`#faqAnswerEditor${idx}`))
      .then(editor => {
        faqEditors[idx] = faqEditors[idx] || {};
        faqEditors[idx].answer = editor;
        editor.setData(answer);
        editor.model.document.on('change:data', ()=> document.getElementById(`faqAnswer${idx}`).value = stripHtml(editor.getData()));
      });
  }

  document.getElementById('addFaqBtn').addEventListener('click', ()=> addFaq());

  // ---------- Image preview ----------
  function showImagePreview(inputId, previewId){
    const input = document.getElementById(inputId);
    const preview = document.getElementById(previewId);
    preview.innerHTML = '';
    const url = input.files[0] ? URL.createObjectURL(input.files[0]) : '';
    if(url){
      const img = document.createElement('img');
      img.src = url;
      img.className='img-thumbnail rounded shadow-sm';
      img.style.width='100px';
      img.style.height='100px';
      img.style.objectFit='cover';
      preview.appendChild(img);
    }
  }

  ['iconImage','image1','image2'].forEach(id=>{
    document.getElementById(id).addEventListener('change', ()=> showImagePreview(id, id==='iconImage'?'iconPreview':id==='image1'?'image1Preview':'image2Preview'));
  });

  // ---------- Reset Form ----------
  window.resetServiceForm = function(){
    document.getElementById('serviceFormTitle').innerText='Add New Service';
    document.getElementById('serviceId').value='';
    document.getElementById('serviceForm').reset();
    serviceEditors.heading.setData('');
    serviceEditors.sub_heading.setData('');
    serviceEditors.short_description.setData('');
    serviceEditors.description.setData('');
    document.getElementById('currentIconImage').value='';
    document.getElementById('currentImage1').value='';
    document.getElementById('currentImage2').value='';
    document.getElementById('iconPreview').innerHTML='';
    document.getElementById('image1Preview').innerHTML='';
    document.getElementById('image2Preview').innerHTML='';
    document.getElementById('faqContainer').innerHTML='';
    faqEditors=[];
  };

  // ---------- Edit Service ----------
  window.editService = async (id)=>{
    const service = servicesData.find(s=>s.id==id);
    if(!service) return Swal.fire('Error','Service not found','error');

    document.getElementById('serviceFormTitle').innerText='Edit Service';
    document.getElementById('serviceId').value=service.id;

    serviceEditors.heading.setData(service.heading||'');
    serviceEditors.sub_heading.setData(service.sub_heading||'');
    serviceEditors.short_description.setData(service.short_description||'');
    serviceEditors.description.setData(service.description||'');

    // show current images
    if(service.icon_image) document.getElementById('iconPreview').innerHTML=`<img src="${service.icon_image}" class="img-thumbnail rounded shadow-sm" style="width:100px;height:100px;object-fit:cover;">`;
    if(service.image_1) document.getElementById('image1Preview').innerHTML=`<img src="${service.image_1}" class="img-thumbnail rounded shadow-sm" style="width:100px;height:100px;object-fit:cover;">`;
    if(service.image_2) document.getElementById('image2Preview').innerHTML=`<img src="${service.image_2}" class="img-thumbnail rounded shadow-sm" style="width:100px;height:100px;object-fit:cover;">`;

    document.getElementById('currentIconImage').value=service.icon_image||'';
    document.getElementById('currentImage1').value=service.image_1||'';
    document.getElementById('currentImage2').value=service.image_2||'';

    document.getElementById('faqContainer').innerHTML='';
    faqEditors=[];

    if(service.faqs && service.faqs.length>0){
      service.faqs.forEach(f=> addFaq(f.question,f.answer));
    }

    document.getElementById('serviceManagementCard').scrollIntoView({behavior:'smooth'});
  };

  // ---------- Save Service ----------
  document.getElementById('serviceForm').addEventListener('submit', async (e)=>{
    e.preventDefault();
    const id=document.getElementById('serviceId').value;
    const isEdit=!!id;

    const heading=serviceEditors.heading.getData().trim();
    if(!heading) return Swal.fire('Error','Heading is required','error');
    if(!isEdit && !document.getElementById('iconImage').files[0]) return Swal.fire('Error','Icon image is required for new services','error');

    const formData=new FormData();
    formData.append('heading', document.getElementById('serviceHeading').value);
    formData.append('sub_heading', document.getElementById('serviceSubHeading').value);
    formData.append('short_description', document.getElementById('serviceShortDesc').value);
    formData.append('description', document.getElementById('serviceDesc').value);

    const faqs=[];
    faqEditors.forEach((f,i)=>{
      if(!f) return;
      const question=document.getElementById(`faqQuestion${i}`)?.value?.trim();
      const answer=document.getElementById(`faqAnswer${i}`)?.value?.trim();
      if(question && answer) faqs.push({question,answer});
    });
    formData.append('faqs', JSON.stringify(faqs));

    if(isEdit){
      formData.append('current_icon_image', document.getElementById('currentIconImage').value);
      formData.append('current_image_1', document.getElementById('currentImage1').value);
      formData.append('current_image_2', document.getElementById('currentImage2').value);
    }

    ['iconImage','image1','image2'].forEach(id=>{
      const file=document.getElementById(id).files[0];
      if(file) formData.append(id==='iconImage'?'icon_image':id==='image1'?'image_1':'image_2',file);
    });

    const url=isEdit?`/admin/services/edit/${id}`:'/admin/services/add';
    const saveBtn=document.getElementById('saveServiceBtn');
    const originalText=saveBtn.innerHTML;
    saveBtn.innerHTML='<span class="spinner-border spinner-border-sm me-2" role="status"></span> Saving...';
    saveBtn.disabled=true;

    try{
      const res=await fetch(url,{method:'POST',body:formData});
      const data=await res.json();
      if(data.success) Swal.fire({icon:'success',title:'Success!',text:data.message,timer:1500,showConfirmButton:false}).then(()=> location.reload());
      else Swal.fire('Error!',data.message,'error');
    }catch(err){
      console.error(err);
      Swal.fire('Error!','Something went wrong while saving the service','error');
    }finally{
      saveBtn.innerHTML=originalText;
      saveBtn.disabled=false;
    }
  });

  // ---------- Update Services Page Content ----------
  document.getElementById('contentForm').addEventListener('submit', async (e)=>{
    e.preventDefault();
    const payload={heading: document.getElementById('heading').value, description: document.getElementById('description').value};
    try{
      const res=await fetch('/admin/services/content/update',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(payload)});
      const data=await res.json();
      Swal.fire({icon: data.success?'success':'error', title: data.success?'Updated!':'Error!', text:data.message, timer:1500, showConfirmButton:false});
    }catch(err){
      console.error(err);
      Swal.fire('Error!','Something went wrong while updating content','error');
    }
  });
  window.deleteService = async (id) => {
  const { isConfirmed } = await Swal.fire({
    title: 'Delete Service?',
    text: 'All related FAQs will also be deleted!',
    icon: 'warning',
    showCancelButton: true,
    confirmButtonText: 'Yes, delete it!',
    cancelButtonText: 'Cancel'
  });

  if (!isConfirmed) return;

  try {
    const res = await fetch(`/admin/services/delete/${id}`, {
      method: 'DELETE',
      headers: { 'Content-Type': 'application/json' }
    });

    const data = await res.json();

    if (data.success) {
      Swal.fire('Deleted!', data.message, 'success').then(() => location.reload());
    } else {
      Swal.fire('Error!', data.message, 'error');
    }
  } catch (err) {
    console.error(err);
    Swal.fire('Error!', 'Failed to delete service', 'error');
  }
};

  // Initialize tooltips
  const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
  const tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
    return new bootstrap.Tooltip(tooltipTriggerEl);
  });

  // Add hover effect to table rows
  const tableRows = document.querySelectorAll('.table-row-hover');
  tableRows.forEach(row => {
    row.addEventListener('mouseenter', () => row.style.transform = 'translateY(-1px)');
    row.addEventListener('mouseleave', () => row.style.transform = 'translateY(0)');
  });
});
</script>

<style>
:root {
  --gradient-primary: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  --gradient-success: linear-gradient(135deg, #11998e 0%, #38ef7d 100%);
  --gradient-info: linear-gradient(135deg, #36d1dc 0%, #5b86e5 100%);
}

.bg-gradient-primary { background: var(--gradient-primary) !important; }
.bg-gradient-success { background: var(--gradient-success) !important; }
.bg-gradient-info { background: var(--gradient-info) !important; }

.ckeditor-container { margin-bottom: 1rem; }
.ck-editor__editable { 
  min-height: 120px; 
  border: 1px solid #dee2e6; 
  border-radius: 0.375rem; 
  padding: 1rem;
}
.ck-editor__editable:focus { 
  border-color: #86b7fe; 
  outline: 0; 
  box-shadow: 0 0 0 0.25rem rgba(13,110,253,.25); 
}

.faq-section .ckeditor-container {
  margin-bottom: 1rem;
}

.table-row-hover {
  transition: all 0.2s ease-in-out;
  cursor: pointer;
}

.table-row-hover:hover {
  background-color: rgba(0,0,0,.03);
  transform: translateY(-2px);
  box-shadow: 0 2px 8px rgba(0,0,0,0.1);
}

.table-hover tbody tr:hover > td {
  background-color: transparent;
}

.card {
  transition: transform 0.2s ease, box-shadow 0.2s ease;
}

.card:hover {
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(0,0,0,0.1) !important;
}

.btn-group .btn {
  border-radius: 0.375rem;
}

.form-control:focus {
  border-color: #86b7fe;
  box-shadow: 0 0 0 0.25rem rgba(13,110,253,.25);
}

@media (max-width: 768px) {
  .d-flex.gap-2 {
    flex-direction: column;
  }
  .btn-lg {
    width: 100%;
  }
  .table th, .table td {
    padding: 0.75rem 0.5rem;
    font-size: 0.875rem;
  }
}
</style>

<%- include('../layouts/admin_layouts_footer') %>